##########################################################################
# Copyright (C) 2007-2009 Douglas Gregor <doug.gregor@gmail.com>         #
# Copyright (C) 2007-2009 Troy Straszheim <troy@resophonic.com>          #
# Copyright (C) 2010-2011 Daniel Pfeifer <daniel@pfeifer-mail.de>        #
#                                                                        #
# Distributed under the Boost Software License, Version 1.0.             #
# See accompanying file LICENSE_1_0.txt or copy at                       #
#   http://www.boost.org/LICENSE_1_0.txt                                 #
##########################################################################

cmake_minimum_required(VERSION 2.8.5 FATAL_ERROR)
project(Boost)

set(Boost_DIR "${Boost_SOURCE_DIR}")

set(BOOST_INITIAL_PASS TRUE CACHE BOOL "")
if(BOOST_INITIAL_PASS)
  set(Boost_MODULE_PATH "${Boost_SOURCE_DIR}/tools/cmake/modules")
  set(Boost_RESOURCE_PATH "${Boost_SOURCE_DIR}/tools/cmake/resources")
endif(BOOST_INITIAL_PASS)

# make visual studio look nice
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

add_subdirectory(libs/accumulators)
add_subdirectory(libs/algorithm)
add_subdirectory(libs/any)
add_subdirectory(libs/array)
add_subdirectory(libs/asio)
add_subdirectory(libs/assign)
add_subdirectory(libs/bimap)
add_subdirectory(libs/bind)
add_subdirectory(libs/chrono)
add_subdirectory(libs/circular_buffer)
add_subdirectory(libs/compatibility)
add_subdirectory(libs/concept_check)
add_subdirectory(libs/config)
add_subdirectory(libs/container)
add_subdirectory(libs/context)
add_subdirectory(libs/conversion)
add_subdirectory(libs/core)
add_subdirectory(libs/crc)
add_subdirectory(libs/date_time)
add_subdirectory(libs/disjoint_sets)
add_subdirectory(libs/dynamic_bitset)
add_subdirectory(libs/exception)
add_subdirectory(libs/filesystem)
add_subdirectory(libs/flyweight)
add_subdirectory(libs/foreach)
add_subdirectory(libs/format)
add_subdirectory(libs/function)
add_subdirectory(libs/function_types)
add_subdirectory(libs/functional)
add_subdirectory(libs/fusion)
add_subdirectory(libs/geometry)
add_subdirectory(libs/gil)
add_subdirectory(libs/graph)
add_subdirectory(libs/graph_parallel)
add_subdirectory(libs/heap)
add_subdirectory(libs/icl)
add_subdirectory(libs/integer)
add_subdirectory(libs/interprocess)
add_subdirectory(libs/intrusive)
add_subdirectory(libs/io)
add_subdirectory(libs/iostreams)
add_subdirectory(libs/iterator)
add_subdirectory(libs/lambda)
add_subdirectory(libs/local_function)
add_subdirectory(libs/locale)
add_subdirectory(libs/logic)
add_subdirectory(libs/math)
add_subdirectory(libs/move)
add_subdirectory(libs/mpi)
add_subdirectory(libs/mpl)
add_subdirectory(libs/msm)
add_subdirectory(libs/multi_array)
add_subdirectory(libs/multi_index)
add_subdirectory(libs/numeric)
add_subdirectory(libs/optional)
add_subdirectory(libs/parameter)
add_subdirectory(libs/phoenix)
add_subdirectory(libs/polygon)
add_subdirectory(libs/pool)
add_subdirectory(libs/preprocessor)
add_subdirectory(libs/program_options)
add_subdirectory(libs/property_map)
add_subdirectory(libs/property_tree)
add_subdirectory(libs/proto)
add_subdirectory(libs/ptr_container)
add_subdirectory(libs/python)
add_subdirectory(libs/random)
add_subdirectory(libs/range)
add_subdirectory(libs/ratio)
add_subdirectory(libs/rational)
add_subdirectory(libs/regex)
add_subdirectory(libs/scope_exit)
add_subdirectory(libs/serialization)
add_subdirectory(libs/signals)
add_subdirectory(libs/signals2)
add_subdirectory(libs/smart_ptr)
add_subdirectory(libs/spirit)
add_subdirectory(libs/statechart)
add_subdirectory(libs/static_assert)
add_subdirectory(libs/system)
add_subdirectory(libs/test)
add_subdirectory(libs/thread)
add_subdirectory(libs/timer)
add_subdirectory(libs/tokenizer)
add_subdirectory(libs/tr1)
add_subdirectory(libs/tti)
add_subdirectory(libs/tuple)
add_subdirectory(libs/type_traits)
add_subdirectory(libs/typeof)
add_subdirectory(libs/units)
add_subdirectory(libs/unordered)
add_subdirectory(libs/utility)
add_subdirectory(libs/uuid)
add_subdirectory(libs/variant)
add_subdirectory(libs/wave)
add_subdirectory(libs/xpressive)
add_subdirectory(tools/auto_index)
add_subdirectory(tools/bcp)
add_subdirectory(tools/boostbook)
add_subdirectory(tools/build)
add_subdirectory(tools/cmake)
add_subdirectory(tools/inspect)
add_subdirectory(tools/litre)
add_subdirectory(tools/quickbook)

if(BOOST_INITIAL_PASS)
  # report an error in order to inhibit the generation step (save time).
  message(SEND_ERROR
    "Initial pass successfully completed, now run CMake again!"
    )
  set(BOOST_INITIAL_PASS FALSE CACHE BOOL "" FORCE)
endif(BOOST_INITIAL_PASS)

